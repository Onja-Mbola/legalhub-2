"""Ajout table RequeteAssignation

Revision ID: 5ba4efd596d1
Revises: 743a1485f3ee
Create Date: 2025-08-20 09:26:55.634836

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5ba4efd596d1'
down_revision: Union[str, Sequence[str], None] = '743a1485f3ee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_enrolements_id'), table_name='enrolements')
    op.drop_table('enrolements')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_adverses_id'), table_name='adverses')
    op.drop_table('adverses')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_table('clients')
    op.drop_index(op.f('ix_demandeurs_id'), table_name='demandeurs')
    op.drop_table('demandeurs')
    op.drop_index(op.f('ix_param_general_id'), table_name='param_general')
    op.drop_table('param_general')
    op.drop_index(op.f('ix_dossiers_id'), table_name='dossiers')
    op.drop_index(op.f('ix_dossiers_numero_dossier'), table_name='dossiers')
    op.drop_table('dossiers')
    op.drop_index(op.f('ix_activation_history_id'), table_name='activation_history')
    op.drop_table('activation_history')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activation_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('actor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['users.id'], name=op.f('activation_history_actor_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('activation_history_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('activation_history_pkey'))
    )
    op.create_index(op.f('ix_activation_history_id'), 'activation_history', ['id'], unique=False)
    op.create_table('dossiers',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('dossiers_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('numero_dossier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('nom_dossier', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type_affaire', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sous_type_affaire', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('urgence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('juridiction', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tribunal', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('avocat_responsable', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('avocat_adverse', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_creation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('commentaire', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('dossier_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pieces_jointes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['avocat_responsable'], ['users.id'], name='dossiers_avocat_responsable_fkey'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='dossiers_client_id_fkey'),
    sa.ForeignKeyConstraint(['sous_type_affaire'], ['param_general.id'], name='dossiers_sous_type_affaire_fkey'),
    sa.ForeignKeyConstraint(['type_affaire'], ['param_general.id'], name='dossiers_type_affaire_fkey'),
    sa.ForeignKeyConstraint(['urgence'], ['param_general.id'], name='dossiers_urgence_fkey'),
    sa.PrimaryKeyConstraint('id', name='dossiers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_dossiers_numero_dossier'), 'dossiers', ['numero_dossier'], unique=True)
    op.create_index(op.f('ix_dossiers_id'), 'dossiers', ['id'], unique=False)
    op.create_table('param_general',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('param_general_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('valeur', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('unite', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ordre', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='param_general_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_param_general_id'), 'param_general', ['id'], unique=False)
    op.create_table('demandeurs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('qualite', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name=op.f('demandeurs_client_id_fkey')),
    sa.ForeignKeyConstraint(['qualite'], ['param_general.id'], name=op.f('demandeurs_qualite_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('demandeurs_pkey'))
    )
    op.create_index(op.f('ix_demandeurs_id'), 'demandeurs', ['id'], unique=False)
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('clients_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('adresse_client', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_client'], ['param_general.id'], name='clients_role_client_fkey'),
    sa.PrimaryKeyConstraint('id', name='clients_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_table('adverses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('qualite', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name=op.f('adverses_client_id_fkey')),
    sa.ForeignKeyConstraint(['qualite'], ['param_general.id'], name=op.f('adverses_qualite_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('adverses_pkey'))
    )
    op.create_index(op.f('ix_adverses_id'), 'adverses', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('admin', 'avocat', 'clarck', name='roleenum'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='users_created_by_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('enrolements',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dossier_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('numero_role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_enrolement', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('preuve_enrolement', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('frais_payes', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('greffier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dossier_id'], ['dossiers.id'], name=op.f('enrolements_dossier_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('enrolements_pkey')),
    sa.UniqueConstraint('dossier_id', name=op.f('enrolements_dossier_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('numero_role', name=op.f('enrolements_numero_role_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_enrolements_id'), 'enrolements', ['id'], unique=False)
    # ### end Alembic commands ###
